/*
 * ST7735_Interfaces.c
 *
 *  Created on: Sep 5, 2021
 *      Author: anura
 */
#include "ST7735_Interfaces.h"



uint8_t SPI_TxByte(uint8_t data){
	uint8_t cmd = data;
	uint8_t temp=0;

	HAL_SPI_TransmitReceive(&hspi2, &cmd, &temp, 1, 100);

	return temp;
}

uint32_t St7735_TFT_ReadID(){

    //uint8_t cmd = 0x04;
    uint8_t temp[4];
    uint32_t data;



    //SPI communication starts when CS goes low.
    HAL_GPIO_WritePin(CS_PORT, CS_PIN, GPIO_PIN_RESET);

    // Then D/CX pin goes low means the next byte is going to be command
    HAL_GPIO_WritePin(DIN_PORT, DIN_PIN, GPIO_PIN_RESET);

    // do a software reset
//    SPI_TxByte(0x01);

    HAL_Delay(500);
   // SPI_TxByte(0x29);
    // command to read the
  SPI_TxByte(0x04);
    temp[0] = SPI_TxByte(0x00);
    temp[1] =  SPI_TxByte(0x00);
    temp[2] =  SPI_TxByte(0x00);
    temp[3] =  SPI_TxByte(0x00);
    HAL_GPIO_WritePin(DIN_PORT, DIN_PIN, GPIO_PIN_SET);
//    	temp[2] = SPI_TxByte(0xA5);
//    	temp[3] = SPI_TxByte(0xA5);
	//

//	temp[0] = SPI_TxByte(0xFF);
//	temp[1] = SPI_TxByte(0xFF);
//	temp[2] = SPI_TxByte(0xFF);
//	temp[3] = SPI_TxByte(0xFF);

	  HAL_GPIO_WritePin(CS_PORT, CS_PIN, GPIO_PIN_SET);
   	data =  ((temp[0] <<24) | (temp[1]<<16) | (temp[2] << 8) | (temp[3])) ;

//	  data = temp[1];
	return data;
}

void LCD_TurnDisplayOff(){

		//SPI communication starts when CS goes low.
		HAL_GPIO_WritePin(CS_PORT, CS_PIN, GPIO_PIN_RESET);
		HAL_GPIO_WritePin(DIN_PORT, DIN_PIN, GPIO_PIN_RESET);
		HAL_Delay(500);

		// 0x28 for OFF
		SPI_TxByte(0x28);
		HAL_Delay(500);

		HAL_GPIO_WritePin(CS_PORT, CS_PIN, GPIO_PIN_SET);
		HAL_GPIO_WritePin(DIN_PORT, DIN_PIN, GPIO_PIN_SET);
}


void LCD_TurnDisplayON(){

		//SPI communication starts when CS goes low.
		HAL_GPIO_WritePin(CS_PORT, CS_PIN, GPIO_PIN_RESET);
		HAL_GPIO_WritePin(DIN_PORT, DIN_PIN, GPIO_PIN_RESET);
		HAL_Delay(500);

		// 0x29 for ON
		SPI_TxByte(0x29);
		HAL_Delay(500);

		HAL_GPIO_WritePin(CS_PORT, CS_PIN, GPIO_PIN_SET);
		HAL_GPIO_WritePin(DIN_PORT, DIN_PIN, GPIO_PIN_SET);
}
