#include <ST7735.h>

 void ST7735_write(uint8_t data) {


	 HAL_SPI_Transmit(SPI_HandleTypeDef &hspi2, uint8_t &data, sizeof(data), 100);

 }

 void ST7735_cmd(uint8_t cmd) {

	 // bring D/C line low
	 HAL_GPIO_WritePin(DC_PORT, DC_PIN, GPIO_PIN_RESET);

	 // then send the command
	 ST7735_write(cmd);
 }


 void ST7735_data(uint8_t data) {

	 HAL_GPIO_WritePin(DC_PORT, DC_PIN, GPIO_PIN_SET);
	 ST7735_write(data);
 }


 void ST7735_Init(void) {

	 // CS high
	 // reset high
	 HAL_GPIO_WritePin(CS_PORT, CS_PIN, GPIO_PIN_SET);
	 HAL_GPIO_WritePin(RST_PORT, RST_PIN, GPIO_PIN_SET);
	 HAL_delay(5);

	 // reset low
	 HAL_GPIO_WritePin(RST_PORT, RST_PIN, GPIO_PIN_RESET);
	 HAL_delay(5);

	 // Reset high
	 // CS high

	 HAL_GPIO_WritePin(RST_PORT, RST_PIN, GPIO_PIN_SET);
	 HAL_GPIO_WritePin(CS_PORT, CS_PIN, GPIO_PIN_SET);
	 HAL_delay(5);

	 //CS low
	 HAL_GPIO_WritePin(CS_PORT, CS_PIN, GPIO_PIN_RESET);

	 // sleep out and booster on
	 ST7735_cmd(0x11);
	 HAL_Delay(100);


	 // put display in normal mode full colors
	 ST7735_cmd(0xb1);

	 // put D/C high

	 HAL_GPIO_WritePin(DC_PORT, DC_PIN, GPIO_PIN_SET);
	ST7735_write(0x05); //   RTNA set 1-line period: RTNA2, RTNA0
	ST7735_write(0x3c); //   Front porch: FPA5,FPA4,FPA3,FPA2
	ST7735_write(0x3c); //   Back porch: BPA5,BPA4,BPA3,BPA2

	ST7735_cmd(0xb2);   // In idle mode (8-colors):
	HAL_GPIO_WritePin(DC_PORT, DC_PIN, GPIO_PIN_SET);
	ST7735_write(0x05); //   RTNB set 1-line period: RTNAB, RTNB0
	ST7735_write(0x3c); //   Front porch: FPB5,FPB4,FPB3,FPB2
	ST7735_write(0x3c); //   Back porch: BPB5,BPB4,BPB3,BPB2


 }
